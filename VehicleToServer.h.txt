/*
 * VehicleToServer.h
 *
 *  Created on: Jan 12, 2024
 *      Author: Lenovo
 */

#ifndef VEHICLETOSERVER_H_
#define VEHICLETOSERVER_H_


#include <omnetpp.h>
#include <Crypto++/sha.h>
#include <Crypto++/sha3.h>
#include <Crypto++/eccrypto.h>
#include <Crypto++/oids.h>
#include <Crypto++/hex.h>
#include <Crypto++/osrng.h>
#include<string>

using namespace omnetpp;
using namespace CryptoPP;
using namespace std;

class VtoS : public cMessage {

private:
    pair<ECP::Point, ECP::Point> PublicKey;
    pair<Integer, Integer> PrivateKey;
    string Message;

public:
         VtoS(const char *name = nullptr, int kind = 0);
        ~VtoS();

        void setPublicKey(const pair<ECP::Point, ECP::Point>& value) { PublicKey = value; }
        pair<ECP::Point, ECP::Point> getPublicKey() const { return PublicKey; }

        void setPrivateKey(const pair<Integer, Integer>& value) { PrivateKey = value; }
        pair<Integer, Integer> getPrivateKey() const { return PrivateKey; }

};


#endif /* VEHICLETOSERVER_H_ */
