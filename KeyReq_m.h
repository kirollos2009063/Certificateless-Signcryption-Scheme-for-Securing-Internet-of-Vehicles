//
// Generated file, do not edit! Created by opp_msgtool 6.0 from KeyReq.msg.
//

#ifndef __KEYREQ_M_H
#define __KEYREQ_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class KeyReqMsg;
/**
 * Class generated from <tt>KeyReq.msg:1</tt> by opp_msgtool.
 * <pre>
 * message KeyReqMsg
 * {
 *     int ID;
 *     int Od;
 * 
 * }
 * </pre>
 */
class KeyReqMsg : public ::omnetpp::cMessage
{
  protected:
    int ID = 0;
    int Od = 0;

  private:
    void copy(const KeyReqMsg& other);

  protected:
    bool operator==(const KeyReqMsg&) = delete;

  public:
    KeyReqMsg(const char *name=nullptr, short kind=0);
    KeyReqMsg(const KeyReqMsg& other);
    virtual ~KeyReqMsg();
    KeyReqMsg& operator=(const KeyReqMsg& other);
    virtual KeyReqMsg *dup() const override {return new KeyReqMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual int getID() const;
    virtual void setID(int ID);

    virtual int getOd() const;
    virtual void setOd(int Od);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const KeyReqMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, KeyReqMsg& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline KeyReqMsg *fromAnyPtr(any_ptr ptr) { return check_and_cast<KeyReqMsg*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __KEYREQ_M_H

